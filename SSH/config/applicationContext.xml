<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
		<!-- 1.配置Spring环境
				1-1：加入jar包和配置文件
				1-2：编写测试用例（测试IOC注入）
				1-3：配置web.xml的contextConfigLocation ，配置文件的默认路径	
		<bean id="date" class="java.util.Date"></bean>
		<bean id="abc" class="java.lang.Thread" ></bean>
		 -->
		 
		 <!-- 2.配置hibernate环境
		 		2-1：加入jar包，编写配置文件
		 		2-2：使用原始hibernate的Session对象进行数据库操作
		  -->
		
		<!-- 3.配置Spring与hibernate的整合
			   3-1：加入与hibernate整合的包
			   3-2：配置dataSource数据源(把hibernate的session交给Spring管理)	
			   3-2：配置sessionFactory
			   3-4：配置事务管理器
			   3-5：事务管理器AOP切入
		 -->
		 
		 <!-- 4.配置struts环境
		 		4-1：加入jar包，编写配置文件
		 		4-2：在web.xml配置strus的核心过滤器
		 		4-3：在jsp跳转action测试
		  -->
		  
		  <!-- 5.配置Struts与spring的整合
		  		 5-1：加入与strus整合jar包
		  		 5-2：配置listening监听器(先于strus拦截请求，吧struts交给spring管理)
		  		 5-3：配置action的注入
		  		 5-4：配置web.xml的opensessioniview
		  		 5-5：在页面点击链接进行测试跳转
		   -->
		   
		   <!--6.测试框架整合是否成功
		   		6-1：在页面点击链接进行测试跳转，然后调用方法保存对象
		     -->
		 
		<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource">
			<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"></property>
			<property name="url" value="jdbc:sqlserver://localhost:1433;DatabaseName=OA"></property>
			<property name="username" value="sa"></property>
			<property name="password" value="123"></property>
		</bean>
		 
		 <bean class="org.springframework.orm.hibernate3.LocalSessionFactoryBean" id="sessionFactory">
		 <property name="dataSource" ref="dataSource"></property>
		 <property name="hibernateProperties">
				<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
				</props>
			</property>
			<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/lsl/entity/</value>
			</list>
			</property>
		 </bean>
		 
		 
		<!-- 配置事务管理器 -->
		<bean class="org.springframework.orm.hibernate3.HibernateTransactionManager" id="transactionManager">
			<property name="sessionFactory" ref="sessionFactory"></property>
		 </bean>


		<!-- 事务管理器方法说明 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/><!--没有就创建，有就打开  -->
			<tx:method name="*"  propagation="SUPPORTS"/><!--没有也可以，有就打开  -->
		</tx:attributes>
		</tx:advice>
		 
		<!-- 配置事务的aop -->
		<aop:config>
		<aop:pointcut expression="execution(* com.lsl.biz.*.*(..))" id="serviceMethod"/>
			<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod"/>
		</aop:config>
		
		
		 </beans>